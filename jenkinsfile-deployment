pipeline{
    agent{
        label "ANSIBLE"
    }
    // environment { 
      //          UBUNTU_SSH_PASSWORD = credentials('UBUNTU_SSH_PASSWORD') 
        //    }

    parameters {
        
        choice(name: 'ENV', choices: ['dev', 'prod', ], description: 'finding the env')
        string(name: 'COMPONENT', defaultValue: ' ', description: 'Which component is deploy')
        string(name: 'VERSION', defaultValue: ' ', description: 'Which version of the component is to be deploy')
    }
    stages{

        stage('Find The server'){
            steps{
                addShortText background: 'orange', color: 'black', borderColor: 'yellow', text: "ENV = ${ENV}"
                addShortText background: 'orange', color: 'black', borderColor: 'yellow', text: "COMPONENT = ${COMPONENT}"
                addShortText background: 'orange', color: 'black', borderColor: 'yellow', text: "VERSION = ${VERSION}"
                sh '''
                  aws ec2 describe-instances --filters "Name=tag:Name,Values=${COMPONENT}-${ENV}" --region us-east-1 | jq .Reservations[].Instances[].PrivateIpAddress |xargs -n1 > inv
                '''
            }
        }
            stage('Deploy to DEV env'){
                when{
                 environment name: 'ENV', value: 'dev'

                }
                steps{
                    git branch: 'main', url:'https://github.com/surendradzelar/ansible.git'
                   sh ' ansible-playbook -i inv Todo.yml -t frontend -e COMPONENT=frontend -e ENV=${ENV} -e APP_VERSION=0.0.1 -e ansible_password=DevOps321' 
                    
                }
            }
            stage('Deploy To Prod env') {
                when {
                environment name: 'ENV', value: 'prod'
                }
                steps{
                    sh "echo ansible-playbood---------"
                }
            }
        }
    }

